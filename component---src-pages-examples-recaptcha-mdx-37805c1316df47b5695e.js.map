{"version":3,"sources":["webpack:///./src/pages/examples/recaptcha.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+OAKO,IAAMA,EAAe,CAC1B,MAAS,qBAQLC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,yCADR,yCAGA,qFACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,6EAIL,+FACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,sBAApB,sBACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,yBAApB,uBAEF,oEAAmD,0BAAYA,WAAW,KAAvB,sBAAnD,0CACA,qBAAG,kBAAIA,WAAW,KAAf,gHACH,8CAA6B,0BAAYA,WAAW,KAAvB,eAA7B,8KAAmQ,0BAAYA,WAAW,KAAvB,MAAnQ,0BACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+pDAsETJ,EAAWK,gBAAiB","file":"component---src-pages-examples-recaptcha-mdx-37805c1316df47b5695e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"reCAPTCHA example\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"contact-form-with-invisible-recaptcha\"\n    }}>{`Contact form with invisible reCAPTCHA`}</h1>\n    <p>{`First, import required components in your class or function:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { NetlifyForm, Honeypot, Recaptcha } from 'react-netlify-forms'\n`}</code></pre>\n    <p>{`Also make sure to set the following environment variables for Netlify:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SITE_RECAPTCHA_KEY`}</inlineCode>{` (used by Netlify)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SITE_RECAPTCHA_SECRET`}</inlineCode>{` (used by Netlify)`}</li>\n    </ul>\n    <p>{`Additionally, you need to make sure to pass `}<inlineCode parentName=\"p\">{`SITE_RECAPTCHA_KEY`}</inlineCode>{` as a prop to the reCAPTCHA-component.`}</p>\n    <p><em parentName=\"p\">{`This example is served by Gatsby and uses an additional variable called GATSBY_SITE_RECAPTCHA_KEY for that.`}</em></p>\n    <p>{`Then, you can use the `}<inlineCode parentName=\"p\">{`NetlifyForm`}</inlineCode>{` component in place of the standard form tag. It will provide you form handlers, which manage submitting data to Netlify. Play around and modify this interactive example (`}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` is used for styling):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<NetlifyForm\n  name='reCAPTCHA'\n  action='/thanks'\n  honeypotName='bot-field'\n  enableRecaptcha\n  onSuccess={(response, context) => {\n    console.log('Successfully sent form data to Netlify Server')\n    context.formRef.current.reset()\n  }}\n>\n  {({ handleChange, success, error }) => (\n    <>\n      <Honeypot />\n      <Recaptcha siteKey={GATSBY_SITE_RECAPTCHA_KEY} invisible />\n      {success && (\n        <p sx={{ variant: 'alerts.success', p: 3 }}>\n          Thanks for contacting us!\n        </p>\n      )}\n      {error && (\n        <p sx={{ variant: 'alerts.muted', p: 3 }}>\n          Sorry, we could not reach servers. Because it only works on Netlify,\n          our GitHub demo does not provide a response.\n        </p>\n      )}\n      <div>\n        <label htmlFor='name' sx={{ variant: 'forms.label' }}>\n          Name:\n        </label>\n        <input\n          type='text'\n          name='name'\n          id='name'\n          onChange={handleChange}\n          sx={{ variant: 'forms.input' }}\n        />\n      </div>\n      <div sx={{ pt: 2 }}>\n        <label htmlFor='message' sx={{ variant: 'forms.label' }}>\n          Message:\n        </label>\n        <textarea\n          type='text'\n          name='message'\n          id='message'\n          rows='4'\n          onChange={handleChange}\n          sx={{ variant: 'forms.textarea' }}\n        />\n      </div>\n      <div sx={{ pt: 3 }}>\n        <button type='submit' sx={{ variant: 'buttons.success' }}>\n          Submit\n        </button>\n        <button type='reset' sx={{ variant: 'buttons.danger' }}>\n          Reset\n        </button>\n      </div>\n    </>\n  )}\n</NetlifyForm>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}