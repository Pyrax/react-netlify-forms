(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{BO6x:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return r}));n("rGqo"),n("Btvt"),n("91GP"),n("mXGw");var a=n("7ljp");var b={title:"Documentation"},l={_frontmatter:b};function r(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,b={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(a.b)("wrapper",Object.assign({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"documentation"},"Documentation"),Object(a.b)("h2",{id:"table-of-contents"},"Table of Contents"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#components"}),"Components"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#netlifyform"}),"NetlifyForm")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#usenetlifyform"}),"useNetlifyForm")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#netlifyformprovider"}),"NetlifyFormProvider")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#netlifyformcontext"}),"NetlifyFormContext")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#usenetlifyformcontext"}),"useNetlifyFormContext")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#netlifyformcomponent"}),"NetlifyFormComponent")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#honeypot"}),"Honeypot")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#recaptcha"}),"reCAPTCHA"))))),Object(a.b)("h2",{id:"components"},"Components"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"netlifyform"},"NetlifyForm"),Object(a.b)("p",null,"Initializes state and functions with ",Object(a.b)("inlineCode",{parentName:"p"},"useNetlifyForm")," and provides them with a context with ",Object(a.b)("inlineCode",{parentName:"p"},"<NetlifyFormProvider/>"),". Renders a form using ",Object(a.b)("inlineCode",{parentName:"p"},"<NetlifyFormComponent/>")," inside the context."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"children"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Children rendered inside the form like inputs.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"formProps"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Additional props for the ",Object(a.b)("inlineCode",{parentName:"td"},"<NetlifyFormComponent/>"),". Can be used to override default methods like ",Object(a.b)("inlineCode",{parentName:"td"},"onSubmit")," and ",Object(a.b)("inlineCode",{parentName:"td"},"onReset"),".")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"props"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Passed as arguments to ",Object(a.b)("inlineCode",{parentName:"td"},"useNetlifyForm")," for setting options for the Netlify Form.")))),Object(a.b)("h3",{id:"usenetlifyform"},"useNetlifyForm"),Object(a.b)("p",null,"Hook used by ",Object(a.b)("inlineCode",{parentName:"p"},"<NetlifyForm />")," to create handlers and state which are used inside the form context."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"name"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Name of the form.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"action"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Form action to fallback to when JavaScript is disabled.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"honeypotName"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Needed when a honeypot is used because SSR needs to know it in advance.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"enableRecaptcha"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Set this if reCAPTCHA is used because SSR needs to know it in advance.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"onSuccess"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Handler when data has been submitted to Netlify.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"onFailure"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Handler when Netlify sent an error.")))),Object(a.b)("h3",{id:"netlifyformprovider"},"NetlifyFormProvider"),Object(a.b)("p",null,"Providing values to ",Object(a.b)("inlineCode",{parentName:"p"},"NetlifyFormContext"),"."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"children"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Children of context.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"props"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Context values.")))),Object(a.b)("h3",{id:"netlifyformcontext"},"NetlifyFormContext"),Object(a.b)("p",null,"Form context returned by ",Object(a.b)("inlineCode",{parentName:"p"},"createContext"),"."),Object(a.b)("h3",{id:"usenetlifyformcontext"},"useNetlifyFormContext"),Object(a.b)("p",null,"Hook-based variant for consuming ",Object(a.b)("inlineCode",{parentName:"p"},"<NetlifyFormContext />"),"."),Object(a.b)("h3",{id:"netlifyformcomponent"},"NetlifyFormComponent"),Object(a.b)("p",null,"Renders a form with handlers provided by ",Object(a.b)("inlineCode",{parentName:"p"},"NetlifyFormContext"),"."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Children"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Form content like inputs.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"props"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Additional props passed to the form. Can be used to override default methods like ",Object(a.b)("inlineCode",{parentName:"td"},"onSubmit")," and ",Object(a.b)("inlineCode",{parentName:"td"},"onReset"),".")))),Object(a.b)("h3",{id:"honeypot"},"Honeypot"),Object(a.b)("p",null,"Component to create a honeypot field which provides extra spam prevention. If a bot fills this field, Netlify dismisses the submitted form data."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"label"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Label as text before honeypot field.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"props"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Additional props for input of the honeypot.")))),Object(a.b)("h3",{id:"recaptcha"},"reCAPTCHA"),Object(a.b)("p",null,"In Netlify dashboard you have to set SITE_RECAPTCHA_KEY and SITE_RECAPTCHA_SECRET. Also, make sure to provide SITE_RECAPTCHA_KEY to the reCAPTCHA component on the client using ",Object(a.b)("inlineCode",{parentName:"p"},"siteKey"),"-prop."),Object(a.b)("p",null,"Available props:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"","",Object(a.b)("abbr",Object.assign({parentName:"th"},{title:"Required"}),"Req"),"",""),Object(a.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"siteKey"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Y"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Recaptcha public site key.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"invisible"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Set whether reCAPTCHA should be invisible or not.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(a.b)("em",{parentName:"td"},"(any)")),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"N"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:null}),"Any other prop will be passed through to the ",Object(a.b)("a",Object.assign({parentName:"td"},{href:"https://www.npmjs.com/package/react-google-recaptcha#component-props"}),"underlying component"),".")))))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-mdx-2bcf24ce52250002b4ed.js.map