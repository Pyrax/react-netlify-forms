(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{BYYN:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return s}));t("rGqo"),t("Btvt"),t("91GP"),t("mXGw");var a=t("7ljp");var r={title:"reCAPTCHA example"},o={_frontmatter:r};function s(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(a.b)("wrapper",Object.assign({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"contact-form-with-invisible-recaptcha"},"Contact form with invisible reCAPTCHA"),Object(a.b)("p",null,"First, import required components in your class or function:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"import { NetlifyForm, Honeypot, Recaptcha } from 'react-netlify-forms'\n")),Object(a.b)("p",null,"Also make sure to set the following environment variables for Netlify:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"SITE_RECAPTCHA_KEY")," (used by Netlify)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"SITE_RECAPTCHA_SECRET")," (used by Netlify)")),Object(a.b)("p",null,"Additionally, you need to make sure to pass ",Object(a.b)("inlineCode",{parentName:"p"},"SITE_RECAPTCHA_KEY")," as a prop to the reCAPTCHA-component."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"This example is served by Gatsby and uses an additional variable called GATSBY_SITE_RECAPTCHA_KEY for that.")),Object(a.b)("p",null,"Then, you can use the ",Object(a.b)("inlineCode",{parentName:"p"},"NetlifyForm")," component in place of the standard form tag. It will provide you form handlers, which manage submitting data to Netlify. Play around and modify this interactive example (",Object(a.b)("inlineCode",{parentName:"p"},"sx")," is used for styling):"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<NetlifyForm\n  name='reCAPTCHA'\n  action='/thanks'\n  honeypotName='bot-field'\n  enableRecaptcha\n  onSuccess={(response, context) => {\n    console.log('Successfully sent form data to Netlify Server')\n    context.formRef.current.reset()\n  }}\n>\n  {({ handleChange, success, error }) => (\n    <>\n      <Honeypot />\n      <Recaptcha siteKey={GATSBY_SITE_RECAPTCHA_KEY} invisible />\n      {success && (\n        <p sx={{ variant: 'alerts.success', p: 3 }}>\n          Thanks for contacting us!\n        </p>\n      )}\n      {error && (\n        <p sx={{ variant: 'alerts.muted', p: 3 }}>\n          Sorry, we could not reach our servers. Please try again later.\n        </p>\n      )}\n      <div>\n        <label htmlFor='name' sx={{ variant: 'forms.label' }}>\n          Name:\n        </label>\n        <input\n          type='text'\n          name='name'\n          id='name'\n          onChange={handleChange}\n          sx={{ variant: 'forms.input' }}\n        />\n      </div>\n      <div sx={{ pt: 2 }}>\n        <label htmlFor='message' sx={{ variant: 'forms.label' }}>\n          Message:\n        </label>\n        <textarea\n          type='text'\n          name='message'\n          id='message'\n          rows='4'\n          onChange={handleChange}\n          sx={{ variant: 'forms.textarea' }}\n        />\n      </div>\n      <div sx={{ pt: 3 }}>\n        <button type='submit' sx={{ variant: 'buttons.success' }}>\n          Submit\n        </button>\n        <button type='reset' sx={{ variant: 'buttons.danger' }}>\n          Reset\n        </button>\n      </div>\n    </>\n  )}\n</NetlifyForm>\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-examples-recaptcha-mdx-3a6a97bb866a6bdf3468.js.map