{"version":3,"sources":["webpack:///./README.md","webpack:///./src/pages/index.mdx"],"names":["name","Alert","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","parentName","variant","isMDXComponent"],"mappings":"+OAKO,IAEeA,EAKhBC,GALgBD,EAKM,QALE,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,kBAASE,KAIZG,EAAc,CAClBC,aAT0B,IAYb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAC5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,8BACE,iBAAGC,WAAW,cAAd,6NAEF,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,sDACP,iCAAKA,WAAW,KAAQ,CACvB,IAAO,uDACP,IAAO,UAJb,IAKsB,+BAAGA,WAAW,KAAQ,CACxC,KAAQ,2BACP,iCAAKA,WAAW,KAAQ,CACvB,IAAO,mEACP,IAAO,8BAEb,YAACT,EAAD,CAAOU,QAAQ,QAAQF,QAAQ,SAC7B,iBAAQ,CACN,GAAM,gBADR,gBAGA,qHACW,0BAAYC,WAAW,KAAvB,gBADX,sBAC0F,0BAAYA,WAAW,KAAvB,QAD1F,gDAGA,2BAAU,kBAAIA,WAAW,KAAf,0DAEZ,iBAAQ,CACN,GAAM,YADR,YAGA,sBACE,kBAAIA,WAAW,MAAf,6BACA,kBAAIA,WAAW,MAAf,yFACA,kBAAIA,WAAW,MAAf,sEAEF,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,oBADR,qBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6CAIL,iBAAQ,CACN,GAAM,qBADR,sBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mCAIL,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uLAYL,iBAAQ,CACN,GAAM,WADR,WAGA,8BAAa,+BAAGA,WAAW,KAAQ,CAC/B,KAAQ,6BADC,gBAGb,uBACA,kCAAiB,+BAAGA,WAAW,KAAQ,CACnC,KAAQ,uDADK,wBAAjB,iDAOJH,EAAWK,gBAAiB,EChGrB,IAAMN,EAAe,GAOtBD,EAAc,CAClBC,aAAYA,GAGC,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGN,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeG,EAAiBH,EAAhC,CAAuCM,WAAYA,EAAYC,QAAQ,cAE5E,YAAC,EAAD,CAAQA,QAAQ,YAKpBF,EAAWK,gBAAiB","file":"component---src-pages-index-mdx-4a07088b857a14dbb53e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Alert = makeShortcode(\"Alert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-netlify-forms\"\n    }}>{`react-netlify-forms`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Reusable and customizable component for using Netlify Forms. Useful for creating multiple Netlify Forms on your site without repeating yourself. Honeypot fields and reCAPTCHA are available as ready-to-use components.`}</p>\n    </blockquote>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/react-netlify-forms\"\n      }}><img parentName=\"a\" {...{\n          \"src\": \"https://img.shields.io/npm/v/react-netlify-forms.svg\",\n          \"alt\": \"NPM\"\n        }}></img></a>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://standardjs.com\"\n      }}><img parentName=\"a\" {...{\n          \"src\": \"https://img.shields.io/badge/code_style-standard-brightgreen.svg\",\n          \"alt\": \"JavaScript Style Guide\"\n        }}></img></a></p>\n    <Alert variant='muted' mdxType=\"Alert\">\n      <h2 {...{\n        \"id\": \"before-using\"\n      }}>{`Before using`}</h2>\n      <p>{`This component must be used with Server-Side Rendering (SSR) because Netlify\nsearches for a `}<inlineCode parentName=\"p\">{`data-netlify`}</inlineCode>{` attribute on HTML `}<inlineCode parentName=\"p\">{`form`}</inlineCode>{` tags to setup their\nForms backend for you.`}</p>\n      <p>{`➡️ `}<em parentName=\"p\">{`Suggestions for SSR: GatsbyJS, Next.js, react-static`}</em></p>\n    </Alert>\n    <h2 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Support for file uploads.`}</li>\n      <li parentName=\"ul\">{`Spam prevention through honeypot and reCAPTCHA components exported from this package.`}</li>\n      <li parentName=\"ul\">{`Can be used alone or together with form libraries such as Formik.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <h3 {...{\n      \"id\": \"install-with-npm\"\n    }}>{`Install with NPM:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install --save react-netlify-forms\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"install-with-yarn\"\n    }}>{`Install with YARN:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add react-netlify-forms\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { Component } from 'react'\n\nimport MyComponent from 'react-netlify-forms'\n\nclass Example extends Component {\n  render() {\n    return <MyComponent />\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`MIT © `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Pyrax\"\n      }}>{`Björn Clees`}</a></p>\n    <hr></hr>\n    <p>{`Thanks to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/create-react-library\"\n      }}>{`create-react-library`}</a>{` for providing quick setup for NPM packages.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Readme from '../../README.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Readme mdxType=\"Readme\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}